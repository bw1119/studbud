{"mappings":"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","sources":["public/script.js"],"sourcesContent":["// Modules\r\n\r\n// Variables\r\n\r\n// DOM variable setups\r\n// Taskadd form\r\nconst form = document.getElementById(\"taskadd-form\");\r\nvar taskAddBtn = document.getElementById(\"taskadd-button\");\r\nvar taskAddForm = document.getElementById(\"taskadd-form\");\r\n  var taskAddCnclBtn = document.getElementById(\"taskadd-form-cancel\");\r\n  // Taskadd data inputs\r\n  var taskInput = document.getElementById(\"taskInput\");\r\n  var dueDateInput = document.getElementById(\"dueDateInput\");\r\n  var estimatedTimeInputMins = document.getElementById(\"estimatedTimeInput-Mins\");\r\n  var estimatedTimeInputHours = document.getElementById(\"estimatedTimeInput-Hours\");\r\n  var priorityInput = document.getElementById(\"priorityInput\");\r\n\r\nvar taskList = document.getElementById(\"tasklist\");\r\n\r\nvar taskListArray = [];\r\n\r\n// Initialise Lockr for LocalStorage functions\r\nLockr.prefix = 'lockr/';\r\n\r\n/////////////////////////\r\n// Handling on page load functions\r\n// - Try to see if user already has tasks in local storage\r\n//   - If so, render kanban board from storage\r\n//   - If not, \r\n/////////////////////////\r\n\r\n// Local storage check, populate with default keys if not already existing\r\n\r\n// ... called when initial HTML has been completely loaded and parsed\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n  console.log(\"test\");\r\n  // If local storage isn't empty\r\n  if (localStorage.length > 0) {\r\n    // Set default board setup:\r\n    // - local storage array for kanban board layout\r\n    Lockr.set('kanban_board',\r\n    ['To-do', 'In-progess', 'Done','Future']\r\n    );\r\n    console.log(Lockr.get('lockr/kanban_board'));\r\n  } else {  // If local storage has content\r\n    // \r\n    \r\n  }\r\n});\r\n\r\n\r\nfunction kanbanInit(){\r\n// Called when page has been completely loaded\r\nwindow.addEventListener(\"load\", function() {\r\n\r\n});\r\n};\r\n\r\n\r\n/////////////////////////\r\n// Handling task add functions\r\n// - EventListeners for form buttons\r\n// - Taskadd form sends values to the taskListArray[]\r\n// - Renders a new task in the board (REWRITE NEEDED)\r\n/////////////////////////\r\n\r\n// On task add button click, reveal task add form\r\ntaskAddBtn.addEventListener(\"click\", function(){\r\n  taskAddForm.style.display = \"flex\";\r\n});\r\n// On task add cancel button click, reset form and hide it\r\ntaskAddCnclBtn.addEventListener(\"click\", function(){\r\n  form.reset();\r\n  taskAddForm.style.display = \"none\";\r\n});\r\n\r\n// On submit button click\r\nform.addEventListener(\"submit\", function(event){\r\n  event.preventDefault();\r\n  let task = taskInput.value;\r\n  let dueDate = dueDateInput.value;\r\n  let estimatedTimeMins = estimatedTimeInputMins.value;\r\n  let estimatedTimeHours = estimatedTimeInputHours.value;\r\n  let priorityRating = priorityInput.options[priorityInput.selectedIndex].value;\r\n  \r\n  // Call addTask() - add recorded task elements to GUI list and array\r\n  addTask(task, dueDate, estimatedTimeMins, estimatedTimeHours, priorityRating, false);\r\n});\r\n\r\n// Push new task to array, render on client\r\nfunction addTask(taskTitle, dueDate, estimatedTimeMins, estimatedTimeHours, priorityRating, completionStatus) {\r\n  let d = new Date();\r\n  let dateCreated = d.getFullYear();\r\n\r\n  let task = {\r\n    // Assign unique id to task\r\n    id: Date.now(), \r\n    // User datapoints\r\n    taskTitle,\r\n    dueDate,\r\n    dateCreated,\r\n    estimatedTimeMins,\r\n    estimatedTimeHours,\r\n    priorityRating,\r\n    completionStatus\r\n  };\r\n  taskListArray.push(task);\r\n  \r\n  // DEV: log array list\r\n    console.log(taskListArray);\r\n  \r\n  renderTask(task);\r\n};\r\n\r\n/////////////////////////\r\n// Handling general kanban render functionality\r\n// - \r\n/////////////////////////\r\n\r\n// Add the new task to the html, with DOM\r\n// DEV: NEEDS REWRITE FOR KANBAN BOARD\r\nfunction renderTask(task){\r\n  // Create HTML elements\r\n  let item = document.createElement(\"li\");\r\n  item.setAttribute('data-id', task.id);\r\n  item.innerHTML = \"<p>\" + task.taskTitle + \"</p>\";\r\n\r\n  // Append new item to task list on the document\r\n  taskList.appendChild(item);\r\n\r\n  // Extra Task DOM elements\r\n  let delButton = document.createElement(\"button\");\r\n  let delButtonText = document.createTextNode(\"Delete Task\");\r\n  delButton.appendChild(delButtonText);\r\n  item.appendChild(delButton);\r\n\r\n  // Event Listeners for DOM elements\r\n  delButton.addEventListener(\"click\", function(event){\r\n    event.preventDefault();\r\n    let id = event.target.parentElement.getAttribute('data-id');\r\n    let index = taskListArray.findIndex(task => task.id === Number(id));\r\n    removeItemFromArray(taskListArray,index);\r\n    item.remove();\r\n  });\r\n\r\n  // Clear the input form\r\n  form.reset();\r\n}\r\n\r\n// Remove deleted task from array\r\nfunction removeItemFromArray(arr, index) {\r\n  if (index > -1){\r\n    arr.splice(index, 1);\r\n  }\r\n  return arr;\r\n}"],"names":[],"version":3,"file":"index.f3bd186e.js.map","sourceRoot":"/__parcel_source_root/"}