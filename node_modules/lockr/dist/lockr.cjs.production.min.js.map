{"version":3,"file":"lockr.cjs.production.min.js","sources":["../src/prefix.ts","../src/smembers.ts","../src/get.ts","../src/keys.ts","../src/flush.ts","../src/getAll.ts","../src/rm.ts","../src/sadd.ts","../src/set.ts","../src/sismember.ts","../src/srem.ts"],"sourcesContent":["let PREFIX = '';\nexport function setPrefix(prefix: string): string {\n  PREFIX = prefix;\n  return PREFIX;\n}\nexport function getPrefixedKey(key: string, options?: Options): string {\n  if (options?.noPrefix === true) {\n    return key;\n  } else {\n    return `${PREFIX}${key}`;\n  }\n}\n\nexport function hasPrefix(): boolean {\n  return PREFIX.length > 0;\n}\n\nexport function getPrefix(): string {\n  return PREFIX;\n}\n\nexport default getPrefix;\n","import { getPrefixedKey } from './prefix';\nexport default function smembers(key: string, options?: Options): Array<any> {\n  const queryKey = getPrefixedKey(key, options);\n  let value;\n\n  const localValue = localStorage.getItem(queryKey);\n  if (localValue !== null) {\n    value = JSON.parse(localValue);\n  } else {\n    value = null;\n  }\n\n  return value && value.data ? value.data : [];\n}\n","import { getPrefixedKey } from './prefix';\n\nexport default function get(\n  key: string,\n  missing?: any,\n  options?: Options\n): any {\n  const queryKey = getPrefixedKey(key, options);\n  let value;\n\n  const localValue = localStorage.getItem(queryKey);\n  try {\n    if (localValue !== null) {\n      value = JSON.parse(localValue);\n    }\n  } catch (e) {\n    if (localStorage[queryKey]) {\n      value = { data: localStorage.getItem(queryKey) };\n    } else {\n      value = null;\n    }\n  }\n\n  if (!value) {\n    return missing;\n  } else if (typeof value === 'object' && typeof value.data !== 'undefined') {\n    return value.data;\n  }\n}\n","import getPrefix, { hasPrefix } from './prefix';\nexport default function keys() {\n  const prefix = getPrefix();\n  const keys: Array<any> = [];\n  const allKeys = Object.keys(localStorage);\n\n  if (!hasPrefix()) {\n    return allKeys;\n  }\n\n  allKeys.forEach(function(key) {\n    if (key.indexOf(prefix) !== -1) {\n      keys.push(key.replace(prefix, ''));\n    }\n  });\n\n  return keys;\n}\n","import keys from './keys';\nimport PREFIX, { getPrefixedKey } from './prefix';\n\nexport default function flush() {\n  if (PREFIX.length > 0) {\n    keys().forEach(key => {\n      localStorage.removeItem(getPrefixedKey(key));\n    });\n  } else {\n    localStorage.clear();\n  }\n}\n","import get from './get';\nimport { default as getKeys } from './keys';\n\nexport default function getAll(includeKeys?: boolean) {\n  const keys = getKeys();\n\n  if (includeKeys) {\n    return keys.reduce(function(accum, key) {\n      const tempObj: Index = {};\n      tempObj[key] = get(key);\n      accum.push(tempObj);\n      return accum;\n    }, []);\n  }\n\n  return keys.map(function(key) {\n    return get(key);\n  });\n}\n","import { getPrefixedKey } from './prefix';\n\nexport default function rm(key: string, options?: Options): void {\n  const queryKey = getPrefixedKey(key, options);\n\n  return localStorage.removeItem(queryKey);\n}\n","import smembers from './smembers';\nimport { getPrefixedKey } from './prefix';\n\nexport default function sadd(\n  key: string,\n  value: any,\n  options?: Options\n): boolean {\n  const queryKey = getPrefixedKey(key, options);\n  let json;\n\n  var values = smembers(key);\n\n  if (values.indexOf(value) > -1) {\n    return false;\n  }\n\n  try {\n    values.push(value);\n    json = JSON.stringify({ data: values });\n    localStorage.setItem(queryKey, json);\n  } catch (e) {\n    console.log(e);\n    if (console)\n      console.warn(\n        \"Lockr didn't successfully add the \" +\n          value +\n          ' to ' +\n          key +\n          ' set, because the localStorage is full.'\n      );\n  }\n  return true;\n}\n","import { getPrefixedKey } from './prefix';\n\ntype Options = any;\nexport default function set(key: string, value: any, options?: Options): void {\n  var query_key = getPrefixedKey(key, options);\n\n  try {\n    localStorage.setItem(query_key, JSON.stringify({ data: value }));\n  } catch (e) {\n    if (console) {\n      console.warn(\n        `Lockr didn't successfully save the '{\"${key}\": \"${value}\"}' pair, because the localStorage is full.`\n      );\n    }\n  }\n}\n","import smembers from './smembers';\n\nexport default function sismember(key: string, value: any) {\n  return smembers(key).indexOf(value) > -1;\n}\n","import { getPrefixedKey } from './prefix';\nimport smembers from './smembers';\n\nexport default function srem(key: string, value: any, options?: Options) {\n  const queryKey = getPrefixedKey(key, options);\n  const values = smembers(key, value);\n  const index = values.indexOf(value);\n\n  if (index > -1) {\n    values.splice(index, 1);\n  }\n\n  const json = JSON.stringify({ data: values });\n\n  try {\n    localStorage.setItem(queryKey, json);\n  } catch (e) {\n    if (console)\n      console.warn(\n        \"Lockr couldn't remove the \" + value + ' from the set ' + key\n      );\n  }\n}\n"],"names":["PREFIX","getPrefixedKey","key","options","noPrefix","hasPrefix","length","getPrefix","smembers","value","queryKey","localValue","localStorage","getItem","JSON","parse","data","get","missing","e","keys","prefix","allKeys","Object","forEach","indexOf","push","replace","removeItem","clear","includeKeys","getKeys","reduce","accum","tempObj","map","json","values","stringify","setItem","console","log","warn","query_key","index","splice"],"mappings":"oEAAA,IAAIA,EAAS,YAKGC,EAAeC,EAAaC,UAChB,WAAtBA,SAAAA,EAASC,UACJF,KAEGF,EAASE,WAIPG,WACPL,EAAOM,OAAS,WAGTC,WACPP,WCjBeQ,EAASN,EAAaC,OAExCM,EADEC,EAAWT,EAAeC,EAAKC,GAG/BQ,EAAaC,aAAaC,QAAQH,UAEtCD,EADiB,OAAfE,EACMG,KAAKC,MAAMJ,GAEX,OAGMF,EAAMO,KAAOP,EAAMO,KAAO,YCVpBC,EACtBf,EACAgB,EACAf,OAGIM,EADEC,EAAWT,EAAeC,EAAKC,GAG/BQ,EAAaC,aAAaC,QAAQH,OAEnB,OAAfC,IACFF,EAAQK,KAAKC,MAAMJ,IAErB,MAAOQ,GAELV,EADEG,aAAaF,GACP,CAAEM,KAAMJ,aAAaC,QAAQH,IAE7B,YAIPD,EAEuB,iBAAVA,QAA4C,IAAfA,EAAMO,KAC5CP,EAAMO,UADR,EADEE,WCvBaE,QAChBC,EAASd,IACTa,EAAmB,GACnBE,EAAUC,OAAOH,KAAKR,qBAEvBP,KAILiB,EAAQE,SAAQ,SAAStB,IACM,IAAzBA,EAAIuB,QAAQJ,IACdD,EAAKM,KAAKxB,EAAIyB,QAAQN,EAAQ,QAI3BD,GATEE,2BCHLtB,EAAOM,OAAS,EAClBc,IAAOI,SAAQ,SAAAtB,GACbU,aAAagB,WAAW3B,EAAeC,OAGzCU,aAAaiB,+CCNcC,OACvBV,EAAOW,WAETD,EACKV,EAAKY,QAAO,SAASC,EAAO/B,OAC3BgC,EAAiB,UACvBA,EAAQhC,GAAOe,EAAIf,GACnB+B,EAAMP,KAAKQ,GACJD,IACN,IAGEb,EAAKe,KAAI,SAASjC,UAChBe,EAAIf,2GCdYA,EAAaC,OAChCO,EAAWT,EAAeC,EAAKC,UAE9BS,aAAagB,WAAWlB,0BCD/BR,EACAO,EACAN,OAGIiC,EADE1B,EAAWT,EAAeC,EAAKC,GAGjCkC,EAAS7B,EAASN,MAElBmC,EAAOZ,QAAQhB,IAAU,SACpB,MAIP4B,EAAOX,KAAKjB,GACZ2B,EAAOtB,KAAKwB,UAAU,CAAEtB,KAAMqB,IAC9BzB,aAAa2B,QAAQ7B,EAAU0B,GAC/B,MAAOjB,GACPqB,QAAQC,IAAItB,GACRqB,SACFA,QAAQE,KACN,qCACEjC,EACA,OACAP,EACA,kDAGD,wBC7BmBA,EAAaO,EAAYN,OAC/CwC,EAAY1C,EAAeC,EAAKC,OAGlCS,aAAa2B,QAAQI,EAAW7B,KAAKwB,UAAU,CAAEtB,KAAMP,KACvD,MAAOU,GACHqB,SACFA,QAAQE,+CACmCxC,SAAUO,+ERVjCY,UACxBrB,EAASqB,8BSAuBnB,EAAaO,UACtCD,EAASN,GAAKuB,QAAQhB,IAAU,4CCAZP,EAAaO,EAAYN,OAC9CO,EAAWT,EAAeC,EAAKC,GAC/BkC,EAAS7B,EAASN,EAAKO,GACvBmC,EAAQP,EAAOZ,QAAQhB,GAEzBmC,GAAS,GACXP,EAAOQ,OAAOD,EAAO,OAGjBR,EAAOtB,KAAKwB,UAAU,CAAEtB,KAAMqB,QAGlCzB,aAAa2B,QAAQ7B,EAAU0B,GAC/B,MAAOjB,GACHqB,SACFA,QAAQE,KACN,6BAA+BjC,EAAQ,iBAAmBP"}